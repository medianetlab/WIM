version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.2
    container_name: wim-zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_SERVERS: server.1=zookeeper:2888:3888
        ZOOKEEPER_CLIENT_PORT: 2181
    restart: always
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-log:/var/lib/zookeeper/log
      - zk-secrets:/etc/zookeeper/secrets

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.4.2
    container_name: wim-kafka
    hostname: wim
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper
    
  neo4j:
    image: neo4j:3.5
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    env_file: 
      - .env
    volumes: 
      - "neo4j-data:/data"
      - "neo4j-logs:/logs"

  wim-nbi:
    build: ./wim-nbi
    image: wim-nbi
    container_name: wim-nbi
    command: >
      gunicorn -b 0.0.0.0:3000
        --access-logfile -
        --reload
        "wim.app:create_app()"
    ports:
      - "3000:3000"
    env_file: 
      - .env
    restart: always
    volumes:
      - "./wim-nbi:/wim-nbi"
    depends_on: 
      - kafka
      - zookeeper
    
  wim-mngr:
    build: ./wim-mngr
    image: wim-mngr
    container_name: wim-mngr
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - "./wim-mngr:/wim-mngr"
    depends_on: 
      - kafka
      - zookeeper

  wim-cli:
    build: ./wim-cli
    image: wim-cli
    container_name: wim-cli
    restart: always
    stdin_open: true
    tty: true
    depends_on: 
      - kafka
      - zookeeper

  mongo:
    image: mongo:latest
    container_name: wim-mongo
    restart: always
    volumes: 
      - "mongo-datadb:/data/db"
      - "mongo-configdb:/data/configdb"

volumes:
  neo4j-logs: {}
  neo4j-data: {}
  mongo-datadb: {}
  mongo-configdb: {}
  zk-data: {}
  zk-log: {}
  zk-secrets: {}
  kafka-data: {}
  kafka-secrets: {}